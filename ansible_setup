instance - terraform 

ssh 
apt inatll nginx 
systemctl start nginx

500
ssh
  apt update
restart machine 
Ansible 

tasks 

ssh 
apt update
apt inatll nginx 
systemctl start nginx

------------------

Part 1 Create 3 Docker container 
Step 1 node and create 3 Ubuntu  container 

1st - ansible_master 
2nd target 1
3rd target 2

Step 2 create containers 

docker run -itd --name ansible_master ubuntu /bin/bash
docker run -itd --name target1 ubuntu /bin/bash
docker run -itd --name target2 ubuntu /bin/bash

Step 3 check the process and name for verification 
docker ps

root@subhmay:~# docker ps
CONTAINER ID   IMAGE     COMMAND       CREATED          STATUS          PORTS     NAMES
0483dd8f7d13   ubuntu    "/bin/bash"   3 seconds ago    Up 2 seconds              target2
9c50eec69b93   ubuntu    "/bin/bash"   18 seconds ago   Up 17 seconds             target1
9419a6d561a0   ubuntu    "/bin/bash"   36 seconds ago   Up 35 seconds             ansible_master


done 


Part 2 install Ansible and requies tools in ansible_master 
Step 4 go to ansible_master container  update the ubuntu and install some dependencies and ansible

docker exec -it ansible_master bash
apt update
apt install ansible vim iputils-ping openssh-client -y
ansible --version

ansible [core 2.12.6]

apt install software-properties-common
 add-apt-repository --yes --update ppa:ansible/ansible
 apt install ansible
 
 
 done 
 
 --------------------
 Part 3 Setup n number of target machines (2)/ container(2)Login to Target and setup target 1 

Step 5  Login to target 1 
docker exec -it target1 bash

Step 6 Update and install SSH and required dependencies 
apt update
apt install vim iputils-ping openssh-client -y
apt-get install openssh-client openssh-server -y
Geographical area 6 6city 44

done 

Step 7 edit sshd_config to allow SSH and root login as ansible requires

cd /etc/ssh 
vi sshd_config
uncomment the parameter and modify the permission to yes PermitRootLogin yes and PasswordAuthentication yes

Step 8 Start the service ssh if its not running
service ssh status
service ssh start 
service ssh status 




172.17.0.3   ip of target 1 


Step 9 change the root password to admin 
passwd root
Admin
Admin


Part 4 Perform the same all steps with target 2 and so on
Step 10 


Part 5  Find the IP’s of all targets container  for adding in ansible host file 
Come out to docker node and run the command 

Step 11
sudo docker inspect target1   -  172.17.0.3 
sudo docker inspect target2 


done---------- 

Part 6 setup ansible_master for ssh connectivity  and adding IP’s in hostfile


Step 12  go to ansible_master

docker exec -it ansible_master bash

Step 13 edit ansible host file and provide the target IP’s
cd /etc/ansible/
ls
Go to hosts file
provide the IP of the target machines

Step 14 verify as you are able to ping target machine from ansible_master

Ping  <Target machine IP>


You will find the IPAddress like 172.17.0.3

done --------------

go back to master machine

Step 15 
generate the ssh key from the ssh-keygen command 

	
provide 3 times enter    (1 location verification + 2 time for passwd )

Part 7 copy the generated ssh keys from ansible_master to target machine and check the connectivity

Step 15 Copy the generated key from ansible_master to remote target 

ssh-copy-id root@172.17.0.3
yes

---------done 

Step 16   You should be able to connect via target machine from ansible_master 
ssh root@172.17.0.3

verify nginx is there or not 

service nginx status

root@9c50eec69b93:~# service nginx status
nginx: unrecognized service
root@9c50eec69b93:~# 

Part 8 Now create a ansible playbook  and run  ansible-playbook 

Step 17 :- create a installnginx.yaml file in 
cd /etc/ansible
vi  installnginx.yaml

---
- hosts: all
  tasks:
    - name: ensure nginx is at the latest version
      apt: name=nginx state=latest



ansible-playbook installnginx.yaml


 

 
 

